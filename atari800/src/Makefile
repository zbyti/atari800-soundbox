# Makefile.in generated by automake 1.15.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/atari800
pkgincludedir = $(includedir)/atari800
pkglibdir = $(libdir)/atari800
pkglibexecdir = $(libexecdir)/atari800
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = $(am__EXEEXT_1)
noinst_PROGRAMS = $(am__EXEEXT_2)
#am__append_1 = libatari800_test guess_settings
am__append_2 = atari800
am__append_3 = sdl/init.c sdl/init.h
#am__append_4 = win32/SDL_win32_main.c
am__append_5 = \
	pokeysnd.c pokeysnd.h \
	mzpokeysnd.c mzpokeysnd.h \
	remez.c remez.h \
	sndsave.c sndsave.h

am__append_6 = sound.c sound.h sdl/sound.c
#am__append_7 = sound.c falcon/sound.c
#am__append_8 = sound.c javanvm/sound.c
#am__append_9 = sound.c dos/sound_dos.c dos/dos_sb.c dos/dos_sb.h
#am__append_10 = sound.c sound_oss.c
#am__append_11 = sound.c libatari800/sound.c libatari800/sound.h
am__append_12 = pokeyrec.c pokeyrec.h
#am__append_13 = \
#	falcon/main.c falcon/c2p_uni.asm falcon/c2p_unid.asm falcon/videl.asm falcon/ikbd.asm \
#	falcon/res.h falcon/xcb.h falcon/jclkcook.h

#am__append_14 = atari_ps2.c
#am__append_15 = ps2kbd.s usbd.s audsrv.s
#am__append_16 = atari_rpi.c gles2/video.c sdl/main.c sdl/input.c sdl/input.h
##am__append_17 = win32/sound.c
#am__append_18 = libwin32.a win32/atari.ro
#am__append_19 = atari_x11.c
#am__append_20 = javanvm/main.c javanvm/javanvm.h javanvm/video.c javanvm/video.h javanvm/input.c javanvm/input.h
am__append_21 = videomode.c videomode.h \
	sdl/main.c sdl/video.c sdl/video.h \
	sdl/video_sw.c sdl/video_sw.h sdl/input.c \
	sdl/input.h sdl/palette.c sdl/palette.h \
	pbi_proto80.c pbi_proto80.h af80.c af80.h \
	bit3.c bit3.h
#am__append_22 = dos/atari_vga.c dos/vga_gfx.c dos/vga_gfx.h dos/vga_asm.s dos/dos_ints.h
#am__append_23 = atari_curses.c
#am__append_24 = atari_basic.c
# These objects are not compiled when --with-video=no
am__append_25 = input.c input.h statesav.c statesav.h
am__append_26 = ui_basic.c ui_basic.h ui.c ui.h
# These objects are not compiled when --with-video=no or --enable-cursesbasic=no
am__append_27 = \
	artifact.c artifact.h \
	colours.c colours.h \
	colours_ntsc.c colours_ntsc.h \
	colours_pal.c colours_pal.h \
	colours_external.c colours_external.h \
	screen.c screen.h

am__append_28 = cycle_map.c cycle_map.h
am__append_29 = \
	roms/altirraos_800.c roms/altirraos_800.h \
	roms/altirraos_xl.c roms/altirraos_xl.h \
	roms/altirra_basic.c roms/altirra_basic.h

am__append_30 = pbi_mio.c pbi_mio.h
am__append_31 = pbi_bb.c pbi_bb.h
am__append_32 = pbi_scsi.c pbi_scsi.h
am__append_33 = pbi_xld.c pbi_xld.h
am__append_34 = voicebox.c voicebox.h
am__append_35 = votrax.c votrax.h votraxsnd.c votraxsnd.h
am__append_36 = resid.cc resid.h slightsid.c slightsid.h sidari.c sidari.h
am__append_37 = psgemu.c psgemu.h
am__append_38 = evie.c evie.h sonari.c sonari.h melody_psg.c melody_psg.h
am__append_39 = opl.c opl.h ymf262.c ymf262.h yamari.c yamari.h
am__append_40 = ide.c ide.h ide_internal.h
am__append_41 = sdl/video_gl.c sdl/video_gl.h
#am__append_42 = falcon/cpu_m68k.asm
am__append_43 = xep80.c xep80.h xep80_fonts.c xep80_fonts.h
am__append_44 = \
	filter_ntsc.c filter_ntsc.h \
	atari_ntsc/atari_ntsc.c atari_ntsc/atari_ntsc.h \
	atari_ntsc/atari_ntsc_config.h atari_ntsc/atari_ntsc_impl.h

am__append_45 = pal_blending.c pal_blending.h
am__append_46 = rdevice.c rdevice.h
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/sdl.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__include_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(docdir)" "$(DESTDIR)$(includedir)"
LIBRARIES = $(lib_LIBRARIES) $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libatari800_a_AR = $(AR) $(ARFLAGS)
libatari800_a_LIBADD =
am__libatari800_a_SOURCES_DIST = libatari800/libatari800.h \
	libatari800/main.c libatari800/main.h libatari800/init.c \
	libatari800/init.h libatari800/exit.c libatari800/input.c \
	libatari800/input.h libatari800/video.c libatari800/video.h \
	libatari800/statesav.c libatari800/statesav.h \
	libatari800/sound.c libatari800/sound.h platform.h pcjoy.h \
	akey.h afile.c afile.h antic.c antic.h atari.c atari.h \
	binload.c binload.h cartridge.c cartridge.h cassette.c \
	cassette.h compfile.c compfile.h cfg.c cfg.h cpu.c cpu.h \
	crc32.c crc32.h devices.c devices.h esc.c esc.h gtia.c gtia.h \
	img_tape.c img_tape.h log.c log.h memory.c memory.h monitor.c \
	monitor.h pbi.c pbi.h pia.c pia.h pokey.c pokey.h \
	roms/altirra_5200_os.c roms/altirra_5200_os.h rtime.c rtime.h \
	sio.c sio.h sysrom.c sysrom.h util.c util.h sdl/init.c \
	sdl/init.h win32/SDL_win32_main.c pokeysnd.c pokeysnd.h \
	mzpokeysnd.c mzpokeysnd.h remez.c remez.h sndsave.c sndsave.h \
	sound.c sound.h sdl/sound.c falcon/sound.c javanvm/sound.c \
	dos/sound_dos.c dos/dos_sb.c dos/dos_sb.h sound_oss.c \
	pokeyrec.c pokeyrec.h falcon/main.c falcon/c2p_uni.asm \
	falcon/c2p_unid.asm falcon/videl.asm falcon/ikbd.asm \
	falcon/res.h falcon/xcb.h falcon/jclkcook.h atari_ps2.c \
	atari_rpi.c gles2/video.c sdl/main.c sdl/input.c sdl/input.h \
	atari_x11.c javanvm/main.c javanvm/javanvm.h javanvm/video.c \
	javanvm/video.h javanvm/input.c javanvm/input.h videomode.c \
	videomode.h sdl/video.c sdl/video.h sdl/video_sw.c \
	sdl/video_sw.h sdl/palette.c sdl/palette.h pbi_proto80.c \
	pbi_proto80.h af80.c af80.h bit3.c bit3.h dos/atari_vga.c \
	dos/vga_gfx.c dos/vga_gfx.h dos/vga_asm.s dos/dos_ints.h \
	atari_curses.c atari_basic.c input.c input.h statesav.c \
	statesav.h ui_basic.c ui_basic.h ui.c ui.h artifact.c \
	artifact.h colours.c colours.h colours_ntsc.c colours_ntsc.h \
	colours_pal.c colours_pal.h colours_external.c \
	colours_external.h screen.c screen.h cycle_map.c cycle_map.h \
	roms/altirraos_800.c roms/altirraos_800.h roms/altirraos_xl.c \
	roms/altirraos_xl.h roms/altirra_basic.c roms/altirra_basic.h \
	pbi_mio.c pbi_mio.h pbi_bb.c pbi_bb.h pbi_scsi.c pbi_scsi.h \
	pbi_xld.c pbi_xld.h voicebox.c voicebox.h votrax.c votrax.h \
	votraxsnd.c votraxsnd.h resid.cc resid.h slightsid.c \
	slightsid.h sidari.c sidari.h psgemu.c psgemu.h evie.c evie.h \
	sonari.c sonari.h melody_psg.c melody_psg.h opl.c opl.h \
	ymf262.c ymf262.h yamari.c yamari.h ide.c ide.h ide_internal.h \
	sdl/video_gl.c sdl/video_gl.h falcon/cpu_m68k.asm xep80.c \
	xep80.h xep80_fonts.c xep80_fonts.h filter_ntsc.c \
	filter_ntsc.h atari_ntsc/atari_ntsc.c atari_ntsc/atari_ntsc.h \
	atari_ntsc/atari_ntsc_config.h atari_ntsc/atari_ntsc_impl.h \
	pal_blending.c pal_blending.h rdevice.c rdevice.h
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = sdl/init.$(OBJEXT)
#am__objects_2 = win32/SDL_win32_main.$(OBJEXT)
am__objects_3 = pokeysnd.$(OBJEXT) \
	mzpokeysnd.$(OBJEXT) remez.$(OBJEXT) \
	sndsave.$(OBJEXT)
am__objects_4 = sound.$(OBJEXT) \
	sdl/sound.$(OBJEXT)
#am__objects_5 = sound.$(OBJEXT) \
#	falcon/sound.$(OBJEXT)
#am__objects_6 = sound.$(OBJEXT) \
#	javanvm/sound.$(OBJEXT)
#am__objects_7 = sound.$(OBJEXT) \
#	dos/sound_dos.$(OBJEXT) \
#	dos/dos_sb.$(OBJEXT)
#am__objects_8 = sound.$(OBJEXT) \
#	sound_oss.$(OBJEXT)
#am__objects_9 = sound.$(OBJEXT) \
#	libatari800/sound.$(OBJEXT)
am__objects_10 = pokeyrec.$(OBJEXT)
#am__objects_11 = falcon/main.$(OBJEXT) \
#	falcon/c2p_uni.$(OBJEXT) \
#	falcon/c2p_unid.$(OBJEXT) \
#	falcon/videl.$(OBJEXT) \
#	falcon/ikbd.$(OBJEXT)
#am__objects_12 = atari_ps2.$(OBJEXT)
#am__objects_13 = atari_rpi.$(OBJEXT) \
#	gles2/video.$(OBJEXT) \
#	sdl/main.$(OBJEXT) \
#	sdl/input.$(OBJEXT)
#am__objects_14 = atari_x11.$(OBJEXT)
#am__objects_15 = javanvm/main.$(OBJEXT) \
#	javanvm/video.$(OBJEXT) \
#	javanvm/input.$(OBJEXT)
am__objects_16 = videomode.$(OBJEXT) \
	sdl/main.$(OBJEXT) sdl/video.$(OBJEXT) \
	sdl/video_sw.$(OBJEXT) \
	sdl/input.$(OBJEXT) sdl/palette.$(OBJEXT) \
	pbi_proto80.$(OBJEXT) af80.$(OBJEXT) \
	bit3.$(OBJEXT)
#am__objects_17 = dos/atari_vga.$(OBJEXT) \
#	dos/vga_gfx.$(OBJEXT) \
#	dos/vga_asm.$(OBJEXT)
#am__objects_18 = atari_curses.$(OBJEXT)
#am__objects_19 = atari_basic.$(OBJEXT)
am__objects_20 = input.$(OBJEXT) \
	statesav.$(OBJEXT)
am__objects_21 = ui_basic.$(OBJEXT) \
	ui.$(OBJEXT)
am__objects_22 = artifact.$(OBJEXT) \
	colours.$(OBJEXT) \
	colours_ntsc.$(OBJEXT) \
	colours_pal.$(OBJEXT) \
	colours_external.$(OBJEXT) \
	screen.$(OBJEXT)
am__objects_23 = cycle_map.$(OBJEXT)
am__objects_24 =  \
	roms/altirraos_800.$(OBJEXT) \
	roms/altirraos_xl.$(OBJEXT) \
	roms/altirra_basic.$(OBJEXT)
am__objects_25 = pbi_mio.$(OBJEXT)
am__objects_26 = pbi_bb.$(OBJEXT)
am__objects_27 = pbi_scsi.$(OBJEXT)
am__objects_28 =  \
	pbi_xld.$(OBJEXT)
am__objects_29 =  \
	voicebox.$(OBJEXT)
am__objects_30 = votrax.$(OBJEXT) \
	votraxsnd.$(OBJEXT)
am__objects_31 = resid.$(OBJEXT) \
	slightsid.$(OBJEXT) \
	sidari.$(OBJEXT)
am__objects_32 = psgemu.$(OBJEXT)
am__objects_33 =  \
	evie.$(OBJEXT) \
	sonari.$(OBJEXT) \
	melody_psg.$(OBJEXT)
am__objects_34 = opl.$(OBJEXT) \
	ymf262.$(OBJEXT) \
	yamari.$(OBJEXT)
am__objects_35 = ide.$(OBJEXT)
am__objects_36 = sdl/video_gl.$(OBJEXT)
#am__objects_37 = falcon/cpu_m68k.$(OBJEXT)
am__objects_38 = xep80.$(OBJEXT) \
	xep80_fonts.$(OBJEXT)
am__objects_39 = filter_ntsc.$(OBJEXT) \
	atari_ntsc/atari_ntsc.$(OBJEXT)
am__objects_40 = pal_blending.$(OBJEXT)
am__objects_41 = rdevice.$(OBJEXT)
am__objects_42 = afile.$(OBJEXT) antic.$(OBJEXT) atari.$(OBJEXT) \
	binload.$(OBJEXT) cartridge.$(OBJEXT) cassette.$(OBJEXT) \
	compfile.$(OBJEXT) cfg.$(OBJEXT) cpu.$(OBJEXT) crc32.$(OBJEXT) \
	devices.$(OBJEXT) esc.$(OBJEXT) gtia.$(OBJEXT) \
	img_tape.$(OBJEXT) log.$(OBJEXT) memory.$(OBJEXT) \
	monitor.$(OBJEXT) pbi.$(OBJEXT) pia.$(OBJEXT) pokey.$(OBJEXT) \
	roms/altirra_5200_os.$(OBJEXT) rtime.$(OBJEXT) sio.$(OBJEXT) \
	sysrom.$(OBJEXT) util.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	$(am__objects_11) $(am__objects_12) $(am__objects_13) \
	$(am__objects_14) $(am__objects_15) $(am__objects_16) \
	$(am__objects_17) $(am__objects_18) $(am__objects_19) \
	$(am__objects_20) $(am__objects_21) $(am__objects_22) \
	$(am__objects_23) $(am__objects_24) $(am__objects_25) \
	$(am__objects_26) $(am__objects_27) $(am__objects_28) \
	$(am__objects_29) $(am__objects_30) $(am__objects_31) \
	$(am__objects_32) $(am__objects_33) $(am__objects_34) \
	$(am__objects_35) $(am__objects_36) $(am__objects_37) \
	$(am__objects_38) $(am__objects_39) $(am__objects_40) \
	$(am__objects_41)
#am_libatari800_a_OBJECTS =  \
#	libatari800/main.$(OBJEXT) \
#	libatari800/init.$(OBJEXT) \
#	libatari800/exit.$(OBJEXT) \
#	libatari800/input.$(OBJEXT) \
#	libatari800/video.$(OBJEXT) \
#	libatari800/statesav.$(OBJEXT) \
#	libatari800/sound.$(OBJEXT) \
#	$(am__objects_42)
libatari800_a_OBJECTS = $(am_libatari800_a_OBJECTS)
libwin32_a_AR = $(AR) $(ARFLAGS)
libwin32_a_LIBADD =
am__libwin32_a_SOURCES_DIST = win32/atari_win32.c win32/atari_win32.h \
	win32/screen_win32.c win32/screen_win32.h \
	win32/render_direct3d.c win32/render_direct3d.h \
	win32/render_directdraw.c win32/render_directdraw.h \
	win32/render_gdi.c win32/render_gdi.h win32/render_gdiplus.c \
	win32/render_gdiplus.h win32/main.c win32/main.h \
	win32/main_menu.h win32/keyboard.c win32/keyboard.h \
	win32/joystick.c win32/joystick.h win32/sound.c
##am__objects_43 = win32/libwin32_a-sound.$(OBJEXT)
#am_libwin32_a_OBJECTS = win32/libwin32_a-atari_win32.$(OBJEXT) \
#	win32/libwin32_a-screen_win32.$(OBJEXT) \
#	win32/libwin32_a-render_direct3d.$(OBJEXT) \
#	win32/libwin32_a-render_directdraw.$(OBJEXT) \
#	win32/libwin32_a-render_gdi.$(OBJEXT) \
#	win32/libwin32_a-render_gdiplus.$(OBJEXT) \
#	win32/libwin32_a-main.$(OBJEXT) \
#	win32/libwin32_a-keyboard.$(OBJEXT) \
#	win32/libwin32_a-joystick.$(OBJEXT) \
#	$(am__objects_43)
libwin32_a_OBJECTS = $(am_libwin32_a_OBJECTS)
am__EXEEXT_1 = atari800$(EXEEXT)
#am__EXEEXT_2 =  \
#	libatari800_test$(EXEEXT) \
#	guess_settings$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__atari800_SOURCES_DIST = platform.h pcjoy.h akey.h afile.c afile.h \
	antic.c antic.h atari.c atari.h binload.c binload.h \
	cartridge.c cartridge.h cassette.c cassette.h compfile.c \
	compfile.h cfg.c cfg.h cpu.c cpu.h crc32.c crc32.h devices.c \
	devices.h esc.c esc.h gtia.c gtia.h img_tape.c img_tape.h \
	log.c log.h memory.c memory.h monitor.c monitor.h pbi.c pbi.h \
	pia.c pia.h pokey.c pokey.h roms/altirra_5200_os.c \
	roms/altirra_5200_os.h rtime.c rtime.h sio.c sio.h sysrom.c \
	sysrom.h util.c util.h sdl/init.c sdl/init.h \
	win32/SDL_win32_main.c pokeysnd.c pokeysnd.h mzpokeysnd.c \
	mzpokeysnd.h remez.c remez.h sndsave.c sndsave.h sound.c \
	sound.h sdl/sound.c falcon/sound.c javanvm/sound.c \
	dos/sound_dos.c dos/dos_sb.c dos/dos_sb.h sound_oss.c \
	libatari800/sound.c libatari800/sound.h pokeyrec.c pokeyrec.h \
	falcon/main.c falcon/c2p_uni.asm falcon/c2p_unid.asm \
	falcon/videl.asm falcon/ikbd.asm falcon/res.h falcon/xcb.h \
	falcon/jclkcook.h atari_ps2.c atari_rpi.c gles2/video.c \
	sdl/main.c sdl/input.c sdl/input.h atari_x11.c javanvm/main.c \
	javanvm/javanvm.h javanvm/video.c javanvm/video.h \
	javanvm/input.c javanvm/input.h videomode.c videomode.h \
	sdl/video.c sdl/video.h sdl/video_sw.c sdl/video_sw.h \
	sdl/palette.c sdl/palette.h pbi_proto80.c pbi_proto80.h af80.c \
	af80.h bit3.c bit3.h dos/atari_vga.c dos/vga_gfx.c \
	dos/vga_gfx.h dos/vga_asm.s dos/dos_ints.h atari_curses.c \
	atari_basic.c input.c input.h statesav.c statesav.h ui_basic.c \
	ui_basic.h ui.c ui.h artifact.c artifact.h colours.c colours.h \
	colours_ntsc.c colours_ntsc.h colours_pal.c colours_pal.h \
	colours_external.c colours_external.h screen.c screen.h \
	cycle_map.c cycle_map.h roms/altirraos_800.c \
	roms/altirraos_800.h roms/altirraos_xl.c roms/altirraos_xl.h \
	roms/altirra_basic.c roms/altirra_basic.h pbi_mio.c pbi_mio.h \
	pbi_bb.c pbi_bb.h pbi_scsi.c pbi_scsi.h pbi_xld.c pbi_xld.h \
	voicebox.c voicebox.h votrax.c votrax.h votraxsnd.c \
	votraxsnd.h resid.cc resid.h slightsid.c slightsid.h sidari.c \
	sidari.h psgemu.c psgemu.h evie.c evie.h sonari.c sonari.h \
	melody_psg.c melody_psg.h opl.c opl.h ymf262.c ymf262.h \
	yamari.c yamari.h ide.c ide.h ide_internal.h sdl/video_gl.c \
	sdl/video_gl.h falcon/cpu_m68k.asm xep80.c xep80.h \
	xep80_fonts.c xep80_fonts.h filter_ntsc.c filter_ntsc.h \
	atari_ntsc/atari_ntsc.c atari_ntsc/atari_ntsc.h \
	atari_ntsc/atari_ntsc_config.h atari_ntsc/atari_ntsc_impl.h \
	pal_blending.c pal_blending.h rdevice.c rdevice.h
am_atari800_OBJECTS = afile.$(OBJEXT) antic.$(OBJEXT) atari.$(OBJEXT) \
	binload.$(OBJEXT) cartridge.$(OBJEXT) cassette.$(OBJEXT) \
	compfile.$(OBJEXT) cfg.$(OBJEXT) cpu.$(OBJEXT) crc32.$(OBJEXT) \
	devices.$(OBJEXT) esc.$(OBJEXT) gtia.$(OBJEXT) \
	img_tape.$(OBJEXT) log.$(OBJEXT) memory.$(OBJEXT) \
	monitor.$(OBJEXT) pbi.$(OBJEXT) pia.$(OBJEXT) pokey.$(OBJEXT) \
	roms/altirra_5200_os.$(OBJEXT) rtime.$(OBJEXT) sio.$(OBJEXT) \
	sysrom.$(OBJEXT) util.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	$(am__objects_11) $(am__objects_12) $(am__objects_13) \
	$(am__objects_14) $(am__objects_15) $(am__objects_16) \
	$(am__objects_17) $(am__objects_18) $(am__objects_19) \
	$(am__objects_20) $(am__objects_21) $(am__objects_22) \
	$(am__objects_23) $(am__objects_24) $(am__objects_25) \
	$(am__objects_26) $(am__objects_27) $(am__objects_28) \
	$(am__objects_29) $(am__objects_30) $(am__objects_31) \
	$(am__objects_32) $(am__objects_33) $(am__objects_34) \
	$(am__objects_35) $(am__objects_36) $(am__objects_37) \
	$(am__objects_38) $(am__objects_39) $(am__objects_40) \
	$(am__objects_41)
atari800_OBJECTS = $(am_atari800_OBJECTS)
atari800_DEPENDENCIES = $(am__append_15) $(am__append_18)
am__guess_settings_SOURCES_DIST = libatari800/guess_settings.c
#am_guess_settings_OBJECTS = libatari800/guess_settings-guess_settings.$(OBJEXT)
guess_settings_OBJECTS = $(am_guess_settings_OBJECTS)
#guess_settings_DEPENDENCIES =  \
#	libatari800.a
guess_settings_LINK = $(CCLD) $(guess_settings_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__libatari800_test_SOURCES_DIST = libatari800/libatari800_test.c
#am_libatari800_test_OBJECTS = libatari800/libatari800_test-libatari800_test.$(OBJEXT)
libatari800_test_OBJECTS = $(am_libatari800_test_OBJECTS)
#libatari800_test_DEPENDENCIES =  \
#	libatari800.a
libatari800_test_LINK = $(CCLD) $(libatari800_test_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
AM_V_CCAS = $(am__v_CCAS_$(V))
am__v_CCAS_ = $(am__v_CCAS_$(AM_DEFAULT_VERBOSITY))
am__v_CCAS_0 = @echo "  CCAS    " $@;
am__v_CCAS_1 = 
SOURCES = $(libatari800_a_SOURCES) $(libwin32_a_SOURCES) \
	$(atari800_SOURCES) $(guess_settings_SOURCES) \
	$(libatari800_test_SOURCES)
DIST_SOURCES = $(am__libatari800_a_SOURCES_DIST) \
	$(am__libwin32_a_SOURCES_DIST) $(am__atari800_SOURCES_DIST) \
	$(am__guess_settings_SOURCES_DIST) \
	$(am__libatari800_test_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(doc_DATA)
am__include_HEADERS_DIST = libatari800/libatari800.h
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/depcomp install-sh
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jerzyk/atari/atari800-cvs/atari800-github/atari800/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AUTOCONF = ${SHELL} /home/jerzyk/atari/atari800-cvs/atari800-github/atari800/missing autoconf
AUTOHEADER = ${SHELL} /home/jerzyk/atari/atari800-cvs/atari800-github/atari800/missing autoheader
AUTOMAKE = ${SHELL} /home/jerzyk/atari/atari800-cvs/atari800-github/atari800/missing automake-1.15
AWK = gawk
CC = gcc
CCAS = vasm
CCASFLAGS = -quiet -devpac -opt-allbra -Faout -DNEW_CYCLE_EXACT -DCRASH_MENU -DMONITOR_BREAK -DMONITOR_PROFILE
CCDEPMODE = depmode=gcc3
CFLAGS = -O2 -Wall -ansi -pedantic -Waggregate-return -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Winline -Wredundant-decls
CFLAGS_NOANSI = -O2 -Wall   -Waggregate-return -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Winline -Wredundant-decls
CPP = gcc -E
CPPFLAGS =  -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVACFLAGS = 
JAVAFLAGS = 
LDFLAGS = 
LIBOBJS = 
LIBS = -lreadline -ltermcap -layemu -lstdc++ -lresid -lm -lpng -lz  -L/usr/lib/x86_64-linux-gnu -lSDL
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/jerzyk/atari/atari800-cvs/atari800-github/atari800/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = atari800
PACKAGE_BUGREPORT = pstehlik@sophics.cz
PACKAGE_NAME = Atari800
PACKAGE_STRING = Atari800 4.1.0
PACKAGE_TARNAME = atari800
PACKAGE_URL = 
PACKAGE_VERSION = 4.1.0
PATH_SEPARATOR = :
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib/x86_64-linux-gnu -lSDL
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 4.1.0
WINDRES = :
XMKMF = 
abs_builddir = /home/jerzyk/atari/atari800-cvs/atari800-github/atari800/src
abs_srcdir = /home/jerzyk/atari/atari800-cvs/atari800-github/atari800/src
abs_top_builddir = /home/jerzyk/atari/atari800-cvs/atari800-github/atari800
abs_top_srcdir = /home/jerzyk/atari/atari800-cvs/atari800-github/atari800
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_WINDRES = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jerzyk/atari/atari800-cvs/atari800-github/atari800/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = subdir-objects
TARGET_BASE_NAME = atari800
#TARGET_BASE_NAME = libatari800.a
TARGET = $(TARGET_BASE_NAME)
man1dir = $(mandir)/man1
AM_CPPFLAGS = -I.
SUFFIXES = .c .cpp .s .o .h .asm
doc_DATA = 
#lib_LIBRARIES = libatari800.a
#include_HEADERS = libatari800/libatari800.h
#libatari800_a_SOURCES =  \
#	libatari800/libatari800.h \
#	libatari800/main.c \
#	libatari800/main.h \
#	libatari800/init.c \
#	libatari800/init.h \
#	libatari800/exit.c \
#	libatari800/input.c \
#	libatari800/input.h \
#	libatari800/video.c \
#	libatari800/video.h \
#	libatari800/statesav.c \
#	libatari800/statesav.h \
#	libatari800/sound.c \
#	libatari800/sound.h \
#	$(atari800_SOURCES)
#libatari800_test_SOURCES = libatari800/libatari800_test.c
#libatari800_test_CFLAGS = -Ilibatari800
#libatari800_test_LDADD = libatari800.a
#guess_settings_SOURCES = libatari800/guess_settings.c
#guess_settings_CFLAGS = -Ilibatari800
#guess_settings_LDADD = libatari800.a
#JAVA = java
#JAVAC = javac
atari800_SOURCES = platform.h pcjoy.h akey.h afile.c afile.h antic.c \
	antic.h atari.c atari.h binload.c binload.h cartridge.c \
	cartridge.h cassette.c cassette.h compfile.c compfile.h cfg.c \
	cfg.h cpu.c cpu.h crc32.c crc32.h devices.c devices.h esc.c \
	esc.h gtia.c gtia.h img_tape.c img_tape.h log.c log.h memory.c \
	memory.h monitor.c monitor.h pbi.c pbi.h pia.c pia.h pokey.c \
	pokey.h roms/altirra_5200_os.c roms/altirra_5200_os.h rtime.c \
	rtime.h sio.c sio.h sysrom.c sysrom.h util.c util.h \
	$(am__append_3) $(am__append_4) $(am__append_5) \
	$(am__append_6) $(am__append_7) $(am__append_8) \
	$(am__append_9) $(am__append_10) $(am__append_11) \
	$(am__append_12) $(am__append_13) $(am__append_14) \
	$(am__append_16) $(am__append_19) $(am__append_20) \
	$(am__append_21) $(am__append_22) $(am__append_23) \
	$(am__append_24) $(am__append_25) $(am__append_26) \
	$(am__append_27) $(am__append_28) $(am__append_29) \
	$(am__append_30) $(am__append_31) $(am__append_32) \
	$(am__append_33) $(am__append_34) $(am__append_35) \
	$(am__append_36) $(am__append_37) $(am__append_38) \
	$(am__append_39) $(am__append_40) $(am__append_41) \
	$(am__append_42) $(am__append_43) $(am__append_44) \
	$(am__append_45) $(am__append_46)
atari800_LDADD = $(am__append_15) $(am__append_18)
#noinst_LIBRARIES = libwin32.a
#libwin32_a_SOURCES = win32/atari_win32.c \
#	win32/atari_win32.h \
#	win32/screen_win32.c \
#	win32/screen_win32.h \
#	win32/render_direct3d.c \
#	win32/render_direct3d.h \
#	win32/render_directdraw.c \
#	win32/render_directdraw.h \
#	win32/render_gdi.c \
#	win32/render_gdi.h \
#	win32/render_gdiplus.c \
#	win32/render_gdiplus.h \
#	win32/main.c win32/main.h \
#	win32/main_menu.h \
#	win32/keyboard.c win32/keyboard.h \
#	win32/joystick.c win32/joystick.h \
#	$(am__append_17)
# A special rule for win32 to not compile with -ansi -pedantic
#libwin32_a_CFLAGS = $(CFLAGS_NOANSI)
RUNTIME = 
#RUNTIME = _runtime
CLEANFILES = *.o *.a *.class .manifest $(TARGET) \
	$(TARGET_BASE_NAME).jar $(TARGET_BASE_NAME)_runtime.java core \
	*.bak *~ roms/*.o roms/*.bak roms/*~ dos/*.o dos/*.bak dos/*~ \
	falcon/*.o falcon/*.bak falcon/*~ sdl/*.o sdl/*.bak sdl/*~ \
	win32/*.o win32/*.ro win32/*.bak win32/*~ javanvm/*.o \
	javanvm/*.bak javanvm/*~ atari_ntsc/*.o atari_ntsc/*.bak \
	atari_ntsc/*~ android/libs android/obj android/bin android/gen \
	libatari800/*.o libatari800/*.bak libatari800/*~
DISTCLEANFILES = Makefile configure config.log config.status config.h \
	android/jni/Android.mk autom4te.cache
EXTRA_DIST = $(doc_DATA) atari800.man joycfg.c mkimg.c win32/atari.rc \
	win32/atari1.ico vtxsmpls.inc javanvm/UnixRuntime.patch \
	javanvm/atari800.java macosx wince win32/msc amiga \
	android/AndroidManifest.xml android/build.xml \
	android/project.properties android/jni/Android.mk.in \
	android/jni/Application.mk android/jni/keys.inc \
	android/jni/androidinput.c android/jni/androidinput.h \
	android/jni/graphics.c android/jni/graphics.h \
	android/jni/jni.c android/jni/platform.c android/jni/sound.c \
	android/res/ android/src/A800Renderer.java \
	android/src/A800view.java android/src/AudioThread.java \
	android/src/FileSelector.java \
	android/src/KeymapPreference.java \
	android/src/MainActivity.java android/src/Preferences.java \
	android/src/SliderPreference.java $(empty)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .s .o .h .asm .cc .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libatari800/$(am__dirstamp):
	@$(MKDIR_P) libatari800
	@: > libatari800/$(am__dirstamp)
libatari800/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libatari800/$(DEPDIR)
	@: > libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/main.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/init.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/exit.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/input.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/video.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/statesav.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/sound.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
roms/$(am__dirstamp):
	@$(MKDIR_P) roms
	@: > roms/$(am__dirstamp)
roms/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) roms/$(DEPDIR)
	@: > roms/$(DEPDIR)/$(am__dirstamp)
roms/altirra_5200_os.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
sdl/$(am__dirstamp):
	@$(MKDIR_P) sdl
	@: > sdl/$(am__dirstamp)
sdl/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sdl/$(DEPDIR)
	@: > sdl/$(DEPDIR)/$(am__dirstamp)
sdl/init.$(OBJEXT): sdl/$(am__dirstamp) sdl/$(DEPDIR)/$(am__dirstamp)
win32/$(am__dirstamp):
	@$(MKDIR_P) win32
	@: > win32/$(am__dirstamp)
win32/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) win32/$(DEPDIR)
	@: > win32/$(DEPDIR)/$(am__dirstamp)
win32/SDL_win32_main.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
sdl/sound.$(OBJEXT): sdl/$(am__dirstamp) sdl/$(DEPDIR)/$(am__dirstamp)
falcon/$(am__dirstamp):
	@$(MKDIR_P) falcon
	@: > falcon/$(am__dirstamp)
falcon/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) falcon/$(DEPDIR)
	@: > falcon/$(DEPDIR)/$(am__dirstamp)
falcon/sound.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
javanvm/$(am__dirstamp):
	@$(MKDIR_P) javanvm
	@: > javanvm/$(am__dirstamp)
javanvm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) javanvm/$(DEPDIR)
	@: > javanvm/$(DEPDIR)/$(am__dirstamp)
javanvm/sound.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
dos/$(am__dirstamp):
	@$(MKDIR_P) dos
	@: > dos/$(am__dirstamp)
dos/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dos/$(DEPDIR)
	@: > dos/$(DEPDIR)/$(am__dirstamp)
dos/sound_dos.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
dos/dos_sb.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
falcon/main.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
falcon/c2p_uni.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
falcon/c2p_unid.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
falcon/videl.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
falcon/ikbd.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
gles2/$(am__dirstamp):
	@$(MKDIR_P) gles2
	@: > gles2/$(am__dirstamp)
gles2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gles2/$(DEPDIR)
	@: > gles2/$(DEPDIR)/$(am__dirstamp)
gles2/video.$(OBJEXT): gles2/$(am__dirstamp) \
	gles2/$(DEPDIR)/$(am__dirstamp)
sdl/main.$(OBJEXT): sdl/$(am__dirstamp) sdl/$(DEPDIR)/$(am__dirstamp)
sdl/input.$(OBJEXT): sdl/$(am__dirstamp) sdl/$(DEPDIR)/$(am__dirstamp)
javanvm/main.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
javanvm/video.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
javanvm/input.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
sdl/video.$(OBJEXT): sdl/$(am__dirstamp) sdl/$(DEPDIR)/$(am__dirstamp)
sdl/video_sw.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
sdl/palette.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
dos/atari_vga.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
dos/vga_gfx.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
dos/vga_asm.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
roms/altirraos_800.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
roms/altirraos_xl.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
roms/altirra_basic.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
sdl/video_gl.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
falcon/cpu_m68k.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
atari_ntsc/$(am__dirstamp):
	@$(MKDIR_P) atari_ntsc
	@: > atari_ntsc/$(am__dirstamp)
atari_ntsc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) atari_ntsc/$(DEPDIR)
	@: > atari_ntsc/$(DEPDIR)/$(am__dirstamp)
atari_ntsc/atari_ntsc.$(OBJEXT): atari_ntsc/$(am__dirstamp) \
	atari_ntsc/$(DEPDIR)/$(am__dirstamp)

libatari800.a: $(libatari800_a_OBJECTS) $(libatari800_a_DEPENDENCIES) $(EXTRA_libatari800_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libatari800.a
	$(AM_V_AR)$(libatari800_a_AR) libatari800.a $(libatari800_a_OBJECTS) $(libatari800_a_LIBADD)
	$(AM_V_at)$(RANLIB) libatari800.a
win32/libwin32_a-atari_win32.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-screen_win32.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-render_direct3d.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-render_directdraw.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-render_gdi.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-render_gdiplus.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-main.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-keyboard.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-joystick.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-sound.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)

libwin32.a: $(libwin32_a_OBJECTS) $(libwin32_a_DEPENDENCIES) $(EXTRA_libwin32_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libwin32.a
	$(AM_V_AR)$(libwin32_a_AR) libwin32.a $(libwin32_a_OBJECTS) $(libwin32_a_LIBADD)
	$(AM_V_at)$(RANLIB) libwin32.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

atari800$(EXEEXT): $(atari800_OBJECTS) $(atari800_DEPENDENCIES) $(EXTRA_atari800_DEPENDENCIES) 
	@rm -f atari800$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(atari800_OBJECTS) $(atari800_LDADD) $(LIBS)
libatari800/guess_settings-guess_settings.$(OBJEXT):  \
	libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)

guess_settings$(EXEEXT): $(guess_settings_OBJECTS) $(guess_settings_DEPENDENCIES) $(EXTRA_guess_settings_DEPENDENCIES) 
	@rm -f guess_settings$(EXEEXT)
	$(AM_V_CCLD)$(guess_settings_LINK) $(guess_settings_OBJECTS) $(guess_settings_LDADD) $(LIBS)
libatari800/libatari800_test-libatari800_test.$(OBJEXT):  \
	libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)

libatari800_test$(EXEEXT): $(libatari800_test_OBJECTS) $(libatari800_test_DEPENDENCIES) $(EXTRA_libatari800_test_DEPENDENCIES) 
	@rm -f libatari800_test$(EXEEXT)
	$(AM_V_CCLD)$(libatari800_test_LINK) $(libatari800_test_OBJECTS) $(libatari800_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f atari_ntsc/*.$(OBJEXT)
	-rm -f dos/*.$(OBJEXT)
	-rm -f falcon/*.$(OBJEXT)
	-rm -f gles2/*.$(OBJEXT)
	-rm -f javanvm/*.$(OBJEXT)
	-rm -f libatari800/*.$(OBJEXT)
	-rm -f roms/*.$(OBJEXT)
	-rm -f sdl/*.$(OBJEXT)
	-rm -f win32/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/af80.Po
include ./$(DEPDIR)/afile.Po
include ./$(DEPDIR)/antic.Po
include ./$(DEPDIR)/artifact.Po
include ./$(DEPDIR)/atari.Po
include ./$(DEPDIR)/atari_basic.Po
include ./$(DEPDIR)/atari_curses.Po
include ./$(DEPDIR)/atari_ps2.Po
include ./$(DEPDIR)/atari_rpi.Po
include ./$(DEPDIR)/atari_x11.Po
include ./$(DEPDIR)/binload.Po
include ./$(DEPDIR)/bit3.Po
include ./$(DEPDIR)/cartridge.Po
include ./$(DEPDIR)/cassette.Po
include ./$(DEPDIR)/cfg.Po
include ./$(DEPDIR)/colours.Po
include ./$(DEPDIR)/colours_external.Po
include ./$(DEPDIR)/colours_ntsc.Po
include ./$(DEPDIR)/colours_pal.Po
include ./$(DEPDIR)/compfile.Po
include ./$(DEPDIR)/cpu.Po
include ./$(DEPDIR)/crc32.Po
include ./$(DEPDIR)/cycle_map.Po
include ./$(DEPDIR)/devices.Po
include ./$(DEPDIR)/esc.Po
include ./$(DEPDIR)/evie.Po
include ./$(DEPDIR)/filter_ntsc.Po
include ./$(DEPDIR)/gtia.Po
include ./$(DEPDIR)/ide.Po
include ./$(DEPDIR)/img_tape.Po
include ./$(DEPDIR)/input.Po
include ./$(DEPDIR)/log.Po
include ./$(DEPDIR)/melody_psg.Po
include ./$(DEPDIR)/memory.Po
include ./$(DEPDIR)/monitor.Po
include ./$(DEPDIR)/mzpokeysnd.Po
include ./$(DEPDIR)/opl.Po
include ./$(DEPDIR)/pal_blending.Po
include ./$(DEPDIR)/pbi.Po
include ./$(DEPDIR)/pbi_bb.Po
include ./$(DEPDIR)/pbi_mio.Po
include ./$(DEPDIR)/pbi_proto80.Po
include ./$(DEPDIR)/pbi_scsi.Po
include ./$(DEPDIR)/pbi_xld.Po
include ./$(DEPDIR)/pia.Po
include ./$(DEPDIR)/pokey.Po
include ./$(DEPDIR)/pokeyrec.Po
include ./$(DEPDIR)/pokeysnd.Po
include ./$(DEPDIR)/psgemu.Po
include ./$(DEPDIR)/rdevice.Po
include ./$(DEPDIR)/remez.Po
include ./$(DEPDIR)/resid.Po
include ./$(DEPDIR)/rtime.Po
include ./$(DEPDIR)/screen.Po
include ./$(DEPDIR)/sidari.Po
include ./$(DEPDIR)/sio.Po
include ./$(DEPDIR)/slightsid.Po
include ./$(DEPDIR)/sndsave.Po
include ./$(DEPDIR)/sonari.Po
include ./$(DEPDIR)/sound.Po
include ./$(DEPDIR)/sound_oss.Po
include ./$(DEPDIR)/statesav.Po
include ./$(DEPDIR)/sysrom.Po
include ./$(DEPDIR)/ui.Po
include ./$(DEPDIR)/ui_basic.Po
include ./$(DEPDIR)/util.Po
include ./$(DEPDIR)/videomode.Po
include ./$(DEPDIR)/voicebox.Po
include ./$(DEPDIR)/votrax.Po
include ./$(DEPDIR)/votraxsnd.Po
include ./$(DEPDIR)/xep80.Po
include ./$(DEPDIR)/xep80_fonts.Po
include ./$(DEPDIR)/yamari.Po
include ./$(DEPDIR)/ymf262.Po
include atari_ntsc/$(DEPDIR)/atari_ntsc.Po
include dos/$(DEPDIR)/atari_vga.Po
include dos/$(DEPDIR)/dos_sb.Po
include dos/$(DEPDIR)/sound_dos.Po
include dos/$(DEPDIR)/vga_gfx.Po
include falcon/$(DEPDIR)/main.Po
include falcon/$(DEPDIR)/sound.Po
include gles2/$(DEPDIR)/video.Po
include javanvm/$(DEPDIR)/input.Po
include javanvm/$(DEPDIR)/main.Po
include javanvm/$(DEPDIR)/sound.Po
include javanvm/$(DEPDIR)/video.Po
include libatari800/$(DEPDIR)/exit.Po
include libatari800/$(DEPDIR)/guess_settings-guess_settings.Po
include libatari800/$(DEPDIR)/init.Po
include libatari800/$(DEPDIR)/input.Po
include libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Po
include libatari800/$(DEPDIR)/main.Po
include libatari800/$(DEPDIR)/sound.Po
include libatari800/$(DEPDIR)/statesav.Po
include libatari800/$(DEPDIR)/video.Po
include roms/$(DEPDIR)/altirra_5200_os.Po
include roms/$(DEPDIR)/altirra_basic.Po
include roms/$(DEPDIR)/altirraos_800.Po
include roms/$(DEPDIR)/altirraos_xl.Po
include sdl/$(DEPDIR)/init.Po
include sdl/$(DEPDIR)/input.Po
include sdl/$(DEPDIR)/main.Po
include sdl/$(DEPDIR)/palette.Po
include sdl/$(DEPDIR)/sound.Po
include sdl/$(DEPDIR)/video.Po
include sdl/$(DEPDIR)/video_gl.Po
include sdl/$(DEPDIR)/video_sw.Po
include win32/$(DEPDIR)/SDL_win32_main.Po
include win32/$(DEPDIR)/libwin32_a-atari_win32.Po
include win32/$(DEPDIR)/libwin32_a-joystick.Po
include win32/$(DEPDIR)/libwin32_a-keyboard.Po
include win32/$(DEPDIR)/libwin32_a-main.Po
include win32/$(DEPDIR)/libwin32_a-render_direct3d.Po
include win32/$(DEPDIR)/libwin32_a-render_directdraw.Po
include win32/$(DEPDIR)/libwin32_a-render_gdi.Po
include win32/$(DEPDIR)/libwin32_a-render_gdiplus.Po
include win32/$(DEPDIR)/libwin32_a-screen_win32.Po
include win32/$(DEPDIR)/libwin32_a-sound.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

win32/libwin32_a-atari_win32.o: win32/atari_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-atari_win32.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-atari_win32.Tpo -c -o win32/libwin32_a-atari_win32.o `test -f 'win32/atari_win32.c' || echo '$(srcdir)/'`win32/atari_win32.c
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-atari_win32.Tpo win32/$(DEPDIR)/libwin32_a-atari_win32.Po
#	$(AM_V_CC)source='win32/atari_win32.c' object='win32/libwin32_a-atari_win32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-atari_win32.o `test -f 'win32/atari_win32.c' || echo '$(srcdir)/'`win32/atari_win32.c

win32/libwin32_a-atari_win32.obj: win32/atari_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-atari_win32.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-atari_win32.Tpo -c -o win32/libwin32_a-atari_win32.obj `if test -f 'win32/atari_win32.c'; then $(CYGPATH_W) 'win32/atari_win32.c'; else $(CYGPATH_W) '$(srcdir)/win32/atari_win32.c'; fi`
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-atari_win32.Tpo win32/$(DEPDIR)/libwin32_a-atari_win32.Po
#	$(AM_V_CC)source='win32/atari_win32.c' object='win32/libwin32_a-atari_win32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-atari_win32.obj `if test -f 'win32/atari_win32.c'; then $(CYGPATH_W) 'win32/atari_win32.c'; else $(CYGPATH_W) '$(srcdir)/win32/atari_win32.c'; fi`

win32/libwin32_a-screen_win32.o: win32/screen_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-screen_win32.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-screen_win32.Tpo -c -o win32/libwin32_a-screen_win32.o `test -f 'win32/screen_win32.c' || echo '$(srcdir)/'`win32/screen_win32.c
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-screen_win32.Tpo win32/$(DEPDIR)/libwin32_a-screen_win32.Po
#	$(AM_V_CC)source='win32/screen_win32.c' object='win32/libwin32_a-screen_win32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-screen_win32.o `test -f 'win32/screen_win32.c' || echo '$(srcdir)/'`win32/screen_win32.c

win32/libwin32_a-screen_win32.obj: win32/screen_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-screen_win32.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-screen_win32.Tpo -c -o win32/libwin32_a-screen_win32.obj `if test -f 'win32/screen_win32.c'; then $(CYGPATH_W) 'win32/screen_win32.c'; else $(CYGPATH_W) '$(srcdir)/win32/screen_win32.c'; fi`
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-screen_win32.Tpo win32/$(DEPDIR)/libwin32_a-screen_win32.Po
#	$(AM_V_CC)source='win32/screen_win32.c' object='win32/libwin32_a-screen_win32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-screen_win32.obj `if test -f 'win32/screen_win32.c'; then $(CYGPATH_W) 'win32/screen_win32.c'; else $(CYGPATH_W) '$(srcdir)/win32/screen_win32.c'; fi`

win32/libwin32_a-render_direct3d.o: win32/render_direct3d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_direct3d.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_direct3d.Tpo -c -o win32/libwin32_a-render_direct3d.o `test -f 'win32/render_direct3d.c' || echo '$(srcdir)/'`win32/render_direct3d.c
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_direct3d.Tpo win32/$(DEPDIR)/libwin32_a-render_direct3d.Po
#	$(AM_V_CC)source='win32/render_direct3d.c' object='win32/libwin32_a-render_direct3d.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_direct3d.o `test -f 'win32/render_direct3d.c' || echo '$(srcdir)/'`win32/render_direct3d.c

win32/libwin32_a-render_direct3d.obj: win32/render_direct3d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_direct3d.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_direct3d.Tpo -c -o win32/libwin32_a-render_direct3d.obj `if test -f 'win32/render_direct3d.c'; then $(CYGPATH_W) 'win32/render_direct3d.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_direct3d.c'; fi`
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_direct3d.Tpo win32/$(DEPDIR)/libwin32_a-render_direct3d.Po
#	$(AM_V_CC)source='win32/render_direct3d.c' object='win32/libwin32_a-render_direct3d.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_direct3d.obj `if test -f 'win32/render_direct3d.c'; then $(CYGPATH_W) 'win32/render_direct3d.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_direct3d.c'; fi`

win32/libwin32_a-render_directdraw.o: win32/render_directdraw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_directdraw.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_directdraw.Tpo -c -o win32/libwin32_a-render_directdraw.o `test -f 'win32/render_directdraw.c' || echo '$(srcdir)/'`win32/render_directdraw.c
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_directdraw.Tpo win32/$(DEPDIR)/libwin32_a-render_directdraw.Po
#	$(AM_V_CC)source='win32/render_directdraw.c' object='win32/libwin32_a-render_directdraw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_directdraw.o `test -f 'win32/render_directdraw.c' || echo '$(srcdir)/'`win32/render_directdraw.c

win32/libwin32_a-render_directdraw.obj: win32/render_directdraw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_directdraw.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_directdraw.Tpo -c -o win32/libwin32_a-render_directdraw.obj `if test -f 'win32/render_directdraw.c'; then $(CYGPATH_W) 'win32/render_directdraw.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_directdraw.c'; fi`
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_directdraw.Tpo win32/$(DEPDIR)/libwin32_a-render_directdraw.Po
#	$(AM_V_CC)source='win32/render_directdraw.c' object='win32/libwin32_a-render_directdraw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_directdraw.obj `if test -f 'win32/render_directdraw.c'; then $(CYGPATH_W) 'win32/render_directdraw.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_directdraw.c'; fi`

win32/libwin32_a-render_gdi.o: win32/render_gdi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_gdi.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_gdi.Tpo -c -o win32/libwin32_a-render_gdi.o `test -f 'win32/render_gdi.c' || echo '$(srcdir)/'`win32/render_gdi.c
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_gdi.Tpo win32/$(DEPDIR)/libwin32_a-render_gdi.Po
#	$(AM_V_CC)source='win32/render_gdi.c' object='win32/libwin32_a-render_gdi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_gdi.o `test -f 'win32/render_gdi.c' || echo '$(srcdir)/'`win32/render_gdi.c

win32/libwin32_a-render_gdi.obj: win32/render_gdi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_gdi.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_gdi.Tpo -c -o win32/libwin32_a-render_gdi.obj `if test -f 'win32/render_gdi.c'; then $(CYGPATH_W) 'win32/render_gdi.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_gdi.c'; fi`
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_gdi.Tpo win32/$(DEPDIR)/libwin32_a-render_gdi.Po
#	$(AM_V_CC)source='win32/render_gdi.c' object='win32/libwin32_a-render_gdi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_gdi.obj `if test -f 'win32/render_gdi.c'; then $(CYGPATH_W) 'win32/render_gdi.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_gdi.c'; fi`

win32/libwin32_a-render_gdiplus.o: win32/render_gdiplus.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_gdiplus.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_gdiplus.Tpo -c -o win32/libwin32_a-render_gdiplus.o `test -f 'win32/render_gdiplus.c' || echo '$(srcdir)/'`win32/render_gdiplus.c
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_gdiplus.Tpo win32/$(DEPDIR)/libwin32_a-render_gdiplus.Po
#	$(AM_V_CC)source='win32/render_gdiplus.c' object='win32/libwin32_a-render_gdiplus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_gdiplus.o `test -f 'win32/render_gdiplus.c' || echo '$(srcdir)/'`win32/render_gdiplus.c

win32/libwin32_a-render_gdiplus.obj: win32/render_gdiplus.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_gdiplus.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_gdiplus.Tpo -c -o win32/libwin32_a-render_gdiplus.obj `if test -f 'win32/render_gdiplus.c'; then $(CYGPATH_W) 'win32/render_gdiplus.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_gdiplus.c'; fi`
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_gdiplus.Tpo win32/$(DEPDIR)/libwin32_a-render_gdiplus.Po
#	$(AM_V_CC)source='win32/render_gdiplus.c' object='win32/libwin32_a-render_gdiplus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_gdiplus.obj `if test -f 'win32/render_gdiplus.c'; then $(CYGPATH_W) 'win32/render_gdiplus.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_gdiplus.c'; fi`

win32/libwin32_a-main.o: win32/main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-main.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-main.Tpo -c -o win32/libwin32_a-main.o `test -f 'win32/main.c' || echo '$(srcdir)/'`win32/main.c
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-main.Tpo win32/$(DEPDIR)/libwin32_a-main.Po
#	$(AM_V_CC)source='win32/main.c' object='win32/libwin32_a-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-main.o `test -f 'win32/main.c' || echo '$(srcdir)/'`win32/main.c

win32/libwin32_a-main.obj: win32/main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-main.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-main.Tpo -c -o win32/libwin32_a-main.obj `if test -f 'win32/main.c'; then $(CYGPATH_W) 'win32/main.c'; else $(CYGPATH_W) '$(srcdir)/win32/main.c'; fi`
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-main.Tpo win32/$(DEPDIR)/libwin32_a-main.Po
#	$(AM_V_CC)source='win32/main.c' object='win32/libwin32_a-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-main.obj `if test -f 'win32/main.c'; then $(CYGPATH_W) 'win32/main.c'; else $(CYGPATH_W) '$(srcdir)/win32/main.c'; fi`

win32/libwin32_a-keyboard.o: win32/keyboard.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-keyboard.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-keyboard.Tpo -c -o win32/libwin32_a-keyboard.o `test -f 'win32/keyboard.c' || echo '$(srcdir)/'`win32/keyboard.c
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-keyboard.Tpo win32/$(DEPDIR)/libwin32_a-keyboard.Po
#	$(AM_V_CC)source='win32/keyboard.c' object='win32/libwin32_a-keyboard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-keyboard.o `test -f 'win32/keyboard.c' || echo '$(srcdir)/'`win32/keyboard.c

win32/libwin32_a-keyboard.obj: win32/keyboard.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-keyboard.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-keyboard.Tpo -c -o win32/libwin32_a-keyboard.obj `if test -f 'win32/keyboard.c'; then $(CYGPATH_W) 'win32/keyboard.c'; else $(CYGPATH_W) '$(srcdir)/win32/keyboard.c'; fi`
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-keyboard.Tpo win32/$(DEPDIR)/libwin32_a-keyboard.Po
#	$(AM_V_CC)source='win32/keyboard.c' object='win32/libwin32_a-keyboard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-keyboard.obj `if test -f 'win32/keyboard.c'; then $(CYGPATH_W) 'win32/keyboard.c'; else $(CYGPATH_W) '$(srcdir)/win32/keyboard.c'; fi`

win32/libwin32_a-joystick.o: win32/joystick.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-joystick.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-joystick.Tpo -c -o win32/libwin32_a-joystick.o `test -f 'win32/joystick.c' || echo '$(srcdir)/'`win32/joystick.c
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-joystick.Tpo win32/$(DEPDIR)/libwin32_a-joystick.Po
#	$(AM_V_CC)source='win32/joystick.c' object='win32/libwin32_a-joystick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-joystick.o `test -f 'win32/joystick.c' || echo '$(srcdir)/'`win32/joystick.c

win32/libwin32_a-joystick.obj: win32/joystick.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-joystick.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-joystick.Tpo -c -o win32/libwin32_a-joystick.obj `if test -f 'win32/joystick.c'; then $(CYGPATH_W) 'win32/joystick.c'; else $(CYGPATH_W) '$(srcdir)/win32/joystick.c'; fi`
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-joystick.Tpo win32/$(DEPDIR)/libwin32_a-joystick.Po
#	$(AM_V_CC)source='win32/joystick.c' object='win32/libwin32_a-joystick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-joystick.obj `if test -f 'win32/joystick.c'; then $(CYGPATH_W) 'win32/joystick.c'; else $(CYGPATH_W) '$(srcdir)/win32/joystick.c'; fi`

win32/libwin32_a-sound.o: win32/sound.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-sound.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-sound.Tpo -c -o win32/libwin32_a-sound.o `test -f 'win32/sound.c' || echo '$(srcdir)/'`win32/sound.c
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-sound.Tpo win32/$(DEPDIR)/libwin32_a-sound.Po
#	$(AM_V_CC)source='win32/sound.c' object='win32/libwin32_a-sound.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-sound.o `test -f 'win32/sound.c' || echo '$(srcdir)/'`win32/sound.c

win32/libwin32_a-sound.obj: win32/sound.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-sound.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-sound.Tpo -c -o win32/libwin32_a-sound.obj `if test -f 'win32/sound.c'; then $(CYGPATH_W) 'win32/sound.c'; else $(CYGPATH_W) '$(srcdir)/win32/sound.c'; fi`
	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-sound.Tpo win32/$(DEPDIR)/libwin32_a-sound.Po
#	$(AM_V_CC)source='win32/sound.c' object='win32/libwin32_a-sound.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-sound.obj `if test -f 'win32/sound.c'; then $(CYGPATH_W) 'win32/sound.c'; else $(CYGPATH_W) '$(srcdir)/win32/sound.c'; fi`

libatari800/guess_settings-guess_settings.o: libatari800/guess_settings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(guess_settings_CFLAGS) $(CFLAGS) -MT libatari800/guess_settings-guess_settings.o -MD -MP -MF libatari800/$(DEPDIR)/guess_settings-guess_settings.Tpo -c -o libatari800/guess_settings-guess_settings.o `test -f 'libatari800/guess_settings.c' || echo '$(srcdir)/'`libatari800/guess_settings.c
	$(AM_V_at)$(am__mv) libatari800/$(DEPDIR)/guess_settings-guess_settings.Tpo libatari800/$(DEPDIR)/guess_settings-guess_settings.Po
#	$(AM_V_CC)source='libatari800/guess_settings.c' object='libatari800/guess_settings-guess_settings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(guess_settings_CFLAGS) $(CFLAGS) -c -o libatari800/guess_settings-guess_settings.o `test -f 'libatari800/guess_settings.c' || echo '$(srcdir)/'`libatari800/guess_settings.c

libatari800/guess_settings-guess_settings.obj: libatari800/guess_settings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(guess_settings_CFLAGS) $(CFLAGS) -MT libatari800/guess_settings-guess_settings.obj -MD -MP -MF libatari800/$(DEPDIR)/guess_settings-guess_settings.Tpo -c -o libatari800/guess_settings-guess_settings.obj `if test -f 'libatari800/guess_settings.c'; then $(CYGPATH_W) 'libatari800/guess_settings.c'; else $(CYGPATH_W) '$(srcdir)/libatari800/guess_settings.c'; fi`
	$(AM_V_at)$(am__mv) libatari800/$(DEPDIR)/guess_settings-guess_settings.Tpo libatari800/$(DEPDIR)/guess_settings-guess_settings.Po
#	$(AM_V_CC)source='libatari800/guess_settings.c' object='libatari800/guess_settings-guess_settings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(guess_settings_CFLAGS) $(CFLAGS) -c -o libatari800/guess_settings-guess_settings.obj `if test -f 'libatari800/guess_settings.c'; then $(CYGPATH_W) 'libatari800/guess_settings.c'; else $(CYGPATH_W) '$(srcdir)/libatari800/guess_settings.c'; fi`

libatari800/libatari800_test-libatari800_test.o: libatari800/libatari800_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libatari800_test_CFLAGS) $(CFLAGS) -MT libatari800/libatari800_test-libatari800_test.o -MD -MP -MF libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Tpo -c -o libatari800/libatari800_test-libatari800_test.o `test -f 'libatari800/libatari800_test.c' || echo '$(srcdir)/'`libatari800/libatari800_test.c
	$(AM_V_at)$(am__mv) libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Tpo libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Po
#	$(AM_V_CC)source='libatari800/libatari800_test.c' object='libatari800/libatari800_test-libatari800_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libatari800_test_CFLAGS) $(CFLAGS) -c -o libatari800/libatari800_test-libatari800_test.o `test -f 'libatari800/libatari800_test.c' || echo '$(srcdir)/'`libatari800/libatari800_test.c

libatari800/libatari800_test-libatari800_test.obj: libatari800/libatari800_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libatari800_test_CFLAGS) $(CFLAGS) -MT libatari800/libatari800_test-libatari800_test.obj -MD -MP -MF libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Tpo -c -o libatari800/libatari800_test-libatari800_test.obj `if test -f 'libatari800/libatari800_test.c'; then $(CYGPATH_W) 'libatari800/libatari800_test.c'; else $(CYGPATH_W) '$(srcdir)/libatari800/libatari800_test.c'; fi`
	$(AM_V_at)$(am__mv) libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Tpo libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Po
#	$(AM_V_CC)source='libatari800/libatari800_test.c' object='libatari800/libatari800_test-libatari800_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libatari800_test_CFLAGS) $(CFLAGS) -c -o libatari800/libatari800_test-libatari800_test.obj `if test -f 'libatari800/libatari800_test.c'; then $(CYGPATH_W) 'libatari800/libatari800_test.c'; else $(CYGPATH_W) '$(srcdir)/libatari800/libatari800_test.c'; fi`

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.s.o:
	$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ $<

.s.obj:
	$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-docDATA: $(doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-local:
#all-local:
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS) config.h \
		all-local
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f atari_ntsc/$(DEPDIR)/$(am__dirstamp)
	-rm -f atari_ntsc/$(am__dirstamp)
	-rm -f dos/$(DEPDIR)/$(am__dirstamp)
	-rm -f dos/$(am__dirstamp)
	-rm -f falcon/$(DEPDIR)/$(am__dirstamp)
	-rm -f falcon/$(am__dirstamp)
	-rm -f gles2/$(DEPDIR)/$(am__dirstamp)
	-rm -f gles2/$(am__dirstamp)
	-rm -f javanvm/$(DEPDIR)/$(am__dirstamp)
	-rm -f javanvm/$(am__dirstamp)
	-rm -f libatari800/$(DEPDIR)/$(am__dirstamp)
	-rm -f libatari800/$(am__dirstamp)
	-rm -f roms/$(DEPDIR)/$(am__dirstamp)
	-rm -f roms/$(am__dirstamp)
	-rm -f sdl/$(DEPDIR)/$(am__dirstamp)
	-rm -f sdl/$(am__dirstamp)
	-rm -f win32/$(DEPDIR)/$(am__dirstamp)
	-rm -f win32/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-noinstLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) atari_ntsc/$(DEPDIR) dos/$(DEPDIR) falcon/$(DEPDIR) gles2/$(DEPDIR) javanvm/$(DEPDIR) libatari800/$(DEPDIR) roms/$(DEPDIR) sdl/$(DEPDIR) win32/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-docDATA \
	install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) atari_ntsc/$(DEPDIR) dos/$(DEPDIR) falcon/$(DEPDIR) gles2/$(DEPDIR) javanvm/$(DEPDIR) libatari800/$(DEPDIR) roms/$(DEPDIR) sdl/$(DEPDIR) win32/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-docDATA \
	uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-local

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-noinstLIBRARIES clean-noinstPROGRAMS cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distdir dvi dvi-am html html-am \
	info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-data-local \
	install-docDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-docDATA \
	uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-local

.PRECIOUS: Makefile

#all-local:: $(TARGET_BASE_NAME).jar
#all-local:: android

# A special rule for SDL_win32_main.c to suppress warnings since this file is
# from SDL and should not have to be modified
win32/SDL_win32_main.o: win32/SDL_win32_main.c
	$(CC) -c -o $@ $(AM_CPPFLAGS) $(CFLAGS) $(DEFAULT_INCLUDES) $(CPPFLAGS) $(DEFS) -Wno-missing-declarations -Wno-missing-prototypes $<

ide.o: ide.c ide.h ide_internal.h
	$(CC) -c -o $@ $(AM_CPPFLAGS) $(CFLAGS_NOANSI) $(DEFAULT_INCLUDES) $(CPPFLAGS) $(DEFS) -Wno-missing-declarations -Wno-missing-prototypes $<

win32/atari.ro: win32/atari.rc
	$(WINDRES) -o $@ --output-format coff --target pe-i386 --define WIN32 --define __MINGW32__ $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $< 

# some special rules for some win32 source files which are actually C++
win32/main.o: win32/main.c
	$(CC) -x c++ -c -o $@ $(AM_CPPFLAGS) $(CFLAGS_NOANSI) $(DEFAULT_INCLUDES) $(CPPFLAGS) $(DEFS) -Wno-missing-declarations -Wno-missing-prototypes $<
win32/render_gdiplus.o: win32/render_gdiplus.c
	$(CC) -x c++ -c -o $@ $(AM_CPPFLAGS) $(CFLAGS_NOANSI) $(DEFAULT_INCLUDES) $(CPPFLAGS) $(DEFS) -Wno-missing-declarations -Wno-missing-prototypes $<
win32/render_direct3d.o: win32/render_direct3d.c
	$(CC) -x c++ -c -o $@ $(AM_CPPFLAGS) $(CFLAGS_NOANSI) $(DEFAULT_INCLUDES) $(CPPFLAGS) $(DEFS) -Wno-missing-declarations -Wno-missing-prototypes $<

.asm.o:
	$(CCAS) $(CCASFLAGS) -o $@ $<

#$(TARGET_BASE_NAME).class: javanvm/$(TARGET_BASE_NAME).java | $(TARGET_BASE_NAME)_runtime.class
#	$(JAVAC) -d . $(JAVACFLAGS) $<

$(TARGET_BASE_NAME)$(RUNTIME).class: $(TARGET)
#To compile using java bytecode directly:
#	$(JAVA) $(JAVAFLAGS) org.ibex.nestedvm.Compiler -o UnixRuntime -outfile $@ $(TARGET_BASE_NAME)$(RUNTIME) $(TARGET)
	$(JAVA) $(JAVAFLAGS) org.ibex.nestedvm.Compiler -o UnixRuntime -outformat javasource -outfile $(TARGET_BASE_NAME)$(RUNTIME).java $(TARGET_BASE_NAME)$(RUNTIME) $(TARGET)
	$(JAVAC) -d . $(JAVACFLAGS) -J-Xmx256m $(TARGET_BASE_NAME)$(RUNTIME).java

$(TARGET_BASE_NAME).jar: $(TARGET_BASE_NAME).class $(TARGET_BASE_NAME)$(RUNTIME).class
	printf "Manifest-Version: 1.0\nMain-Class: $(TARGET_BASE_NAME)\nClass-Path: unix_runtime.jar\n" > .manifest
	jar cfm $(TARGET_BASE_NAME).jar .manifest *.class

# Allow parallel execution in sub-make with '+'
android:
	+ ndk-build -C android
	ant -f android/build.xml debug
.PHONY: android

install-data-local:
	$(mkinstalldirs) $(DESTDIR)$(man1dir)
	$(INSTALL_DATA) $(srcdir)/atari800.man ${DESTDIR}${man1dir}/atari800.1

uninstall-local:
	$(RM) ${DESTDIR}${man1dir}/atari800.1*

readme.html: $(TARGET)
	./$(TARGET) -help </dev/null | $(top_srcdir)/util/usage2html.pl \
		$(top_srcdir)/DOC/readme.html.in $(top_srcdir)/DOC/USAGE $(srcdir)/atari.h > $@

doc: readme.html

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
